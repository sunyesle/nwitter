{"version":3,"sources":["fbase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstence","authService","auth","dbService","firestore","storageService","storage","Profile","userObj","refreshUser","useState","displayName","newDisplayName","setNewDisplayName","getMyNweets","a","collection","where","uid","orderBy","get","useEffect","onSubmit","event","preventDefault","updateProfile","className","type","placeholder","value","onChange","target","autoFocus","style","marginTop","onClick","signOut","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","required","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDelteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","faTrash","faPencilAlt","NweetFactory","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","add","maxLength","htmlFor","faPlus","accept","files","length","theFile","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","alt","backgroundImage","faTimes","Home","nweets","setNweets","onSnapshot","snapshot","nweetArray","docs","map","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAgBAA,IAASC,cAVY,CACnBC,OAAQC,0CACRC,WAAYD,gCACZE,YAAaF,uCACbG,UAAWH,gBACXI,cAAeJ,4BACfK,kBAAmBL,gBACnBM,MAAON,+CAKF,IAAMO,EAAmBV,IAEnBW,EAAcX,IAASY,OACvBC,EAAYb,IAASc,YACrBC,EAAiBf,IAASgB,UCmCxBC,EAtDC,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,YAAkB,EACAC,mBAASF,EAAQG,aADjB,mBACrCC,EADqC,KACrBC,EADqB,KAKtCC,EAAW,uCAAG,sBAAAC,EAAA,sEACGZ,EAClBa,WAAW,UACXC,MAAM,YAAa,KAAMT,EAAQU,KACjCC,QAAQ,aACRC,MALe,yDAAH,qDAOjBC,qBAAU,WACRP,MACC,IACH,IAMMQ,EAAQ,uCAAG,WAAOC,GAAP,SAAAR,EAAA,yDACfQ,EAAMC,iBACFhB,EAAQG,cAAgBC,EAFb,gCAGPJ,EAAQiB,cAAc,CAAEd,YAAaC,IAH9B,OAKfH,IALe,2CAAH,sDAOd,OACE,sBAAKiB,UAAU,YAAf,UACE,uBAAMJ,SAAUA,EAAUI,UAAU,cAApC,UACE,uBACEC,KAAK,OACLC,YAAY,eACZC,MAAOjB,EACPkB,SApBS,SAACP,GAAW,IAEfM,EACRN,EADFQ,OAAUF,MAEZhB,EAAkBgB,IAiBZG,WAAS,EACTN,UAAU,UACVO,MAAO,CAAEC,UAAW,MAEtB,uBACEP,KAAK,SACLE,MAAM,SACNH,UAAU,UACVO,MAAO,CAAEC,UAAW,SAGxB,sBAAMC,QA7CY,WACpBlC,EAAYmC,WA4CoBV,UAAU,2BAAxC,yBCuBSW,EAtEE,WAAO,IAAD,EACK3B,mBAAS,IADd,mBACd4B,EADc,KACPC,EADO,OAEW7B,mBAAS,IAFpB,mBAEd8B,EAFc,KAEJC,EAFI,OAGe/B,oBAAS,GAHxB,mBAGdgC,EAHc,KAGFC,EAHE,OAIKjC,mBAAS,IAJd,mBAIdkC,EAJc,KAIPC,EAJO,KAKff,EAAW,SAACP,GAAW,IAAD,EAGtBA,EADFQ,OAAUe,EAFc,EAEdA,KAAMjB,EAFQ,EAERA,MAEL,UAATiB,EACFP,EAASV,GACS,aAATiB,GACTL,EAAYZ,IAGVP,EAAQ,uCAAG,WAAOC,GAAP,eAAAR,EAAA,yDACfQ,EAAMC,iBADS,UAITkB,EAJS,gCAMEzC,EAAY8C,+BACvBT,EACAE,GARS,OAMXQ,EANW,+CAYE/C,EAAYgD,2BAA2BX,EAAOE,GAZhD,QAYXQ,EAZW,eAcbE,QAAQC,IAAIH,GAdC,kDAgBbH,EAAS,KAAMO,SAhBF,0DAAH,sDAoBd,OACE,qCACE,uBAAM9B,SAAUA,EAAUI,UAAU,YAApC,UACE,uBACEoB,KAAK,QACLnB,KAAK,OACLC,YAAY,QACZyB,UAAQ,EACRxB,MAAOS,EACPR,SAAUA,EACVJ,UAAU,cAEZ,uBACEoB,KAAK,WACLnB,KAAK,WACLC,YAAY,WACZyB,UAAQ,EACRxB,MAAOW,EACPV,SAAUA,EACVJ,UAAU,cAEZ,uBACEC,KAAK,SACLE,MAAOa,EAAa,iBAAmB,SACvChB,UAAU,yBAEXkB,GAAS,sBAAMlB,UAAU,YAAhB,SAA6BkB,OAEzC,sBAAMT,QA7BY,kBAAMQ,GAAc,SAACW,GAAD,OAAWA,MA6BnB5B,UAAU,aAAxC,SACGgB,EAAa,UAAY,uB,gBCvBnBa,EAlCF,WACX,IAAMC,EAAa,uCAAG,WAAOjC,GAAP,iBAAAR,EAAA,4DAKP,YAHD+B,EACRvB,EADFQ,OAAUe,MAIVW,EAAW,IAAIzD,EAAiBE,KAAKwD,mBACnB,WAATZ,IACTW,EAAW,IAAIzD,EAAiBE,KAAKyD,oBARnB,SAUd1D,EAAY2D,gBAAgBH,GAVd,2CAAH,sDAYnB,OACE,sBAAK/B,UAAU,gBAAf,UACE,cAAC,IAAD,CACEmC,KAAMC,IACNC,MAAO,UACPC,KAAK,KACL/B,MAAO,CAAEgC,aAAc,MAEzB,cAAC,EAAD,IACA,sBAAKvC,UAAU,WAAf,UACE,yBAAQoB,KAAK,SAASX,QAASqB,EAAe9B,UAAU,UAAxD,kCACuB,cAAC,IAAD,CAAiBmC,KAAMK,SAE9C,yBAAQpB,KAAK,SAASX,QAASqB,EAAe9B,UAAU,UAAxD,kCACuB,cAAC,IAAD,CAAiBmC,KAAMM,gB,gBC+BvCC,EA/DD,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAAc,EACT5D,oBAAS,GADA,mBAChC6D,EADgC,KACvBC,EADuB,OAEP9D,mBAAS2D,EAASI,MAFX,mBAEhCC,EAFgC,KAEtBC,EAFsB,KAGjCC,EAAY,uCAAG,sBAAA7D,EAAA,0DACR8D,OAAOC,QAAQ,+CADP,gCAGX3E,EAAU4E,IAAV,iBAAwBV,EAASW,KAAMC,SAH5B,uBAIX5E,EAAe6E,WAAWb,EAASc,eAAeF,SAJvC,2CAAH,qDAOZG,EAAgB,kBAAMZ,GAAW,SAAClB,GAAD,OAAWA,MAC5ChC,EAAQ,uCAAG,WAAOC,GAAP,SAAAR,EAAA,6DACfQ,EAAMC,iBADS,SAGTrB,EAAU4E,IAAV,iBAAwBV,EAASW,KAAMK,OAAO,CAAEZ,KAAMC,IAH7C,OAIfF,GAAW,GAJI,2CAAH,sDAYd,OACE,qBAAK9C,UAAU,QAAf,SACG6C,EACC,qCACE,uBAAMjD,SAAUA,EAAUI,UAAU,sBAApC,UACE,uBACEC,KAAK,OACLC,YAAY,kBACZC,MAAO6C,EACP5C,SAfK,SAACP,GAAW,IAEfM,EACRN,EADFQ,OAAUF,MAEZ8C,EAAY9C,IAYFwB,UAAQ,EACRrB,WAAS,EACTN,UAAU,cAEZ,uBAAOC,KAAK,SAASE,MAAM,eAAeH,UAAU,eAEtD,wBAAQS,QAASiD,EAAe1D,UAAU,oBAA1C,uBAKF,qCACE,6BAAK2C,EAASI,OACbJ,EAASc,eAAiB,qBAAKG,IAAKjB,EAASc,gBAC7Cb,GACC,sBAAK5C,UAAU,iBAAf,UACE,sBAAMS,QAASyC,EAAf,SACE,cAAC,IAAD,CAAiBf,KAAM0B,QAEzB,sBAAMpD,QAASiD,EAAf,SACE,cAAC,IAAD,CAAiBvB,KAAM2B,iB,QCoCxBC,EAxFM,SAAC,GAAiB,IAAfjF,EAAc,EAAdA,QAAc,EACVE,mBAAS,IADC,mBAC7BgF,EAD6B,KACtBC,EADsB,OAEAjF,mBAAS,IAFT,mBAE7BkF,EAF6B,KAEjBC,EAFiB,KAG9BvE,EAAQ,uCAAG,WAAOC,GAAP,qBAAAR,EAAA,yDACfQ,EAAMC,iBACQ,KAAVkE,EAFW,oDAGXP,EAAgB,GACD,KAAfS,EAJW,wBAKPE,EAAgBzF,EACnB0F,MACAC,MAFmB,UAEVxF,EAAQU,IAFE,YAEK+E,gBAPd,SAQUH,EAAcI,UAAUN,EAAY,YAR9C,cAQPO,EARO,iBASSA,EAASJ,IAAIK,iBATtB,QASbjB,EATa,sBAWTd,EAAW,CACfI,KAAMiB,EACNW,UAAWC,KAAKC,MAChBC,UAAWhG,EAAQU,IACnBiE,iBAfa,UAiBThF,EAAUa,WAAW,UAAUyF,IAAIpC,GAjB1B,QAkBfsB,EAAS,IACTE,EAAc,IAnBC,4CAAH,sDA4Cd,OACE,uBAAMvE,SAAUA,EAAUI,UAAU,cAApC,UACE,sBAAKA,UAAU,0BAAf,UACE,uBACEC,KAAK,OACLC,YAAY,sBACZ8E,UAAW,IACX7E,MAAO6D,EACP5D,SA/BS,SAACP,GAAW,IAEfM,EACRN,EADFQ,OAAUF,MAEZ8D,EAAS9D,IA4BHH,UAAU,wBAEZ,uBAAOC,KAAK,SAASE,MAAM,SAASH,UAAU,2BAEhD,wBAAOiF,QAAQ,cAAcjF,UAAU,sBAAvC,UACE,8CACA,cAAC,IAAD,CAAiBmC,KAAM+C,SAEzB,uBACE5B,GAAG,cACHrD,KAAK,OACLkF,OAAO,UACP/E,SAtCe,SAACP,GAAW,IAEnBuF,EACRvF,EADFQ,OAAU+E,MAEZ,GAAqB,IAAjBA,EAAMC,OAAV,CACA,IAAMC,EAAUF,EAAM,GAChBG,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAAmB,IAElBC,EACfD,EADFE,cAAiBD,OAEnBxB,EAAcwB,IAEhBJ,EAAOM,cAAcP,KA0BjB/E,MAAO,CAAEuF,QAAS,KAEnB5B,GACC,sBAAKlE,UAAU,0BAAf,UACE,qBACE4D,IAAKM,EACL6B,IAAI,aACJxF,MAAO,CAAEyF,gBAAiB9B,KAE5B,yBAAQzD,QAjCU,kBAAM0D,EAAc,KAiCFnE,UAAU,qBAA9C,UACE,0CACA,cAAC,IAAD,CAAiBmC,KAAM8D,gBCrDpBC,EA5BF,SAAC,GAAiB,IAAfpH,EAAc,EAAdA,QAAc,EACAE,mBAAS,IADT,mBACrBmH,EADqB,KACbC,EADa,KAY5B,OAVAzG,qBAAU,WACRlB,EAAUa,WAAW,UAAU+G,YAAW,SAACC,GACzC,IAAMC,EAAaD,EAASE,KAAKC,KAAI,SAACpD,GAAD,oBACnCC,GAAID,EAAIC,IACLD,EAAI/B,WAET8E,EAAUG,QAEX,IAGD,sBAAKvG,UAAU,YAAf,UACE,cAAC,EAAD,CAAclB,QAASA,IACvB,qBAAKyB,MAAO,CAAEC,UAAW,IAAzB,SACG2F,EAAOM,KAAI,SAACzC,GAAD,OACV,cAAC,EAAD,CAEErB,SAAUqB,EACVpB,QAASoB,EAAMc,YAAchG,EAAQU,KAFhCwE,EAAMV,aCURoD,EA3BI,SAAC,GAAD,IAAG5H,EAAH,EAAGA,QAAH,OACjB,8BACE,qBAAIyB,MAAO,CAAEoG,QAAS,OAAQC,eAAgB,SAAUpG,UAAW,IAAnE,UACE,6BACE,cAAC,IAAD,CAAMqG,GAAG,IAAItG,MAAO,CAAEuG,YAAa,IAAnC,SACE,cAAC,IAAD,CAAiB3E,KAAMC,IAAWC,MAAO,UAAWC,KAAK,WAG7D,6BACE,eAAC,IAAD,CACEuE,GAAG,WACHtG,MAAO,CACLwG,WAAY,GACZJ,QAAS,OACTK,cAAe,SACfC,WAAY,SACZC,SAAU,IAPd,UAUE,cAAC,IAAD,CAAiB/E,KAAMgF,IAAQ9E,MAAO,UAAWC,KAAK,OACtD,uBAAM/B,MAAO,CAAEC,UAAW,IAA1B,UAAiC1B,EAAQG,YAAzC,2BCuBKmI,EArCG,SAAC,GAA0C,IAAxCrI,EAAuC,EAAvCA,YAAasI,EAA0B,EAA1BA,WAAYvI,EAAc,EAAdA,QAC5C,OACE,eAAC,IAAD,WACGuI,GAAc,cAAC,EAAD,CAAYvI,QAASA,IACpC,cAAC,IAAD,UACGuI,EACC,sBACE9G,MAAO,CACL+G,SAAU,IACVC,MAAO,OACPC,OAAQ,SACRhH,UAAW,GACXmG,QAAS,OACTC,eAAgB,UAPpB,UAUE,cAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CAAM5I,QAASA,MAEjB,cAAC,IAAD,CAAO2I,OAAK,EAACC,KAAK,WAAlB,SACE,cAAC,EAAD,CAAS5I,QAASA,EAASC,YAAaA,MAE1C,cAAC,IAAD,CAAU4I,KAAK,IAAId,GAAG,SAGxB,qCACE,cAAC,IAAD,CAAOY,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAUC,KAAK,IAAId,GAAG,eCGnBe,MAxCf,WAAgB,IAAD,EACW5I,oBAAS,GADpB,mBACN6I,EADM,KACAC,EADA,OAEiB9I,mBAAS,MAF1B,mBAENF,EAFM,KAEGiJ,EAFH,KAyBb,OAtBApI,qBAAU,WACRpB,EAAYyJ,oBAAmB,SAACC,GAE5BF,EADEE,EACS,CACThJ,YAAagJ,EAAKhJ,YAClBO,IAAKyI,EAAKzI,IACVO,cAAe,SAACmI,GAAD,OAAUD,EAAKlI,cAAcmI,KAGnC,MAEbJ,GAAQ,QAET,IAUD,mCACGD,EACC,cAAC,EAAD,CACE9I,YAZY,WAClB,IAAMkJ,EAAO1J,EAAY4J,YACzBJ,EAAW,CACT9I,YAAagJ,EAAKhJ,YAClBO,IAAKyI,EAAKzI,IACVO,cAAe,SAACmI,GAAD,OAAUD,EAAKlI,cAAcmI,OAQxCb,WAAYe,QAAQtJ,GACpBA,QAASA,IAGX,sB,MCjCRuJ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4b6fe60f.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\n\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\nvar firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstence = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import { authService, dbService } from 'fbase';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n  };\r\n  const getMyNweets = async () => {\r\n    const nweets = await dbService\r\n      .collection('nweets')\r\n      .where('creatorId', '==', userObj.uid)\r\n      .orderBy('createdAt')\r\n      .get();\r\n  };\r\n  useEffect(() => {\r\n    getMyNweets();\r\n  }, []);\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({ displayName: newDisplayName });\r\n    }\r\n    refreshUser();\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n          onChange={onChange}\r\n          autoFocus\r\n          className=\"formBtn\"\r\n          style={{ marginTop: 10 }}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Change\"\r\n          className=\"formBtn\"\r\n          style={{ marginTop: 10 }}\r\n        />\r\n      </form>\r\n      <span onClick={onLogOutClick} className=\"formBtn cancelBtn logOut\">\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState } from 'react';\r\nimport { authService } from 'fbase';\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === 'email') {\r\n      setEmail(value);\r\n    } else if (name === 'password') {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        // 계정 생성\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        //로그인\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value={newAccount ? 'Create Account' : 'Log In'}\r\n          className=\"authInput authSubmit\"\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? 'Sign in' : 'Create Account'}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import { authService, firebaseInstence } from 'fbase';\r\nimport React from 'react';\r\nimport AuthForm from 'components/AuthForm';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === 'google') {\r\n      provider = new firebaseInstence.auth.GoogleAuthProvider();\r\n    } else if (name === 'github') {\r\n      provider = new firebaseInstence.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={'#04AAFF'}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button name=\"google\" onClick={onSocialClick} className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button name=\"github\" onClick={onSocialClick} className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import { dbService, storageService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n  const onDelteClick = async () => {\r\n    const ok = window.confirm('Are you sure you want to delete this nweet?');\r\n    if (ok) {\r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Edit your nweet\"\r\n              value={newNweet}\r\n              onChange={onChange}\r\n              required\r\n              autoFocus\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n          </form>\r\n          <button onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n          {isOwner && (\r\n            <div className=\"nweet__actions\">\r\n              <span onClick={onDelteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;\r\n","import React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { dbService, storageService } from 'fbase';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState('');\r\n  const [attachment, setAttachment] = useState('');\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (nweet === '') return;\r\n    let attachmentUrl = '';\r\n    if (attachment !== '') {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, 'data_url');\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection('nweets').add(nweetObj);\r\n    setNweet('');\r\n    setAttachment('');\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    if (files.length === 0) return;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onClearAttachment = () => setAttachment('');\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind\"\r\n          maxLength={120}\r\n          value={nweet}\r\n          onChange={onChange}\r\n          className=\"factoryInput__input\"\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{ opacity: 0 }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            alt=\"attachment\"\r\n            style={{ backgroundImage: attachment }}\r\n          />\r\n          <button onClick={onClearAttachment} className=\"factoryForm__clear\">\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </button>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NweetFactory;\r\n","import Nweet from 'components/Nweet';\r\nimport { dbService } from 'fbase';\r\nimport React, { useEffect, useState } from 'react';\r\nimport NweetFactory from 'components/NweetFactory';\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n  useEffect(() => {\r\n    dbService.collection('nweets').onSnapshot((snapshot) => {\r\n      const nweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setNweets(nweetArray);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <NweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul style={{ display: 'flex', justifyContent: 'center', marginTop: 50 }}>\r\n      <li>\r\n        <Link to=\"/\" style={{ marginRight: 10 }}>\r\n          <FontAwesomeIcon icon={faTwitter} color={'#04AAFF'} size=\"2x\" />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={'#04AAFF'} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>{userObj.displayName}'s Profile</span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport {\r\n  HashRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from 'react-router-dom';\r\nimport Profile from 'routes/Profile';\r\nimport Auth from '../routes/Auth';\r\nimport Home from '../routes/Home';\r\nimport Navigation from './Navigation';\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: '100%',\r\n              margin: '0 auto',\r\n              marginTop: 80,\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n            <Redirect from=\"*\" to=\"/\" />\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n            <Redirect from=\"*\" to=\"/\" />\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from 'react';\nimport AppRouter from 'components/Router';\nimport { authService } from 'fbase';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        'Initailizing....'\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}